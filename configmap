
apiVersion: v1
kind: Pod
metadata:
  name: envar-demo
  labels:
    purpose: demonstrate-envars
spec:
  containers:
  - name: envar-demo-container
    image: sreeharshav/rollingupdate:v1
    env:
    - name: SERVER_IP
      value: ".8.8.8"
    - name: PASSWORD
      value: "my-password"


kubectl exec -it envar-demo --env

apiVersion: v1
kind: Pod
metadata:
  name: pod1
  labels:
    purpose: testing
spec:
  containers:
  - name: nginx-pod
    image: nginx
    env:
    - name: SERVER_IP
      value: ".8.8.8"
    - name: PASSWORD
      value: "my-password"
	  
	  
	  
kubectl expose pod pod1 --port=80 --target-port=80 --type=NodePort


https://github.com/mavrick202/dockertest1.git


apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
		volumeMounts:
		- mountPath: /usr/share/nginx/html
		  name: config
	  volumes:
	  - name: config
	    configMap:
		  name: htmldefault
		  
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: config1
      volumes:
      - name: config1
        configMap:
          name: htmldefault
		
		
apiVersion: v1
kind: Service
metadata:
  name: my-service
spec:
  selector:
    app: nginx
  ports:
    - port: 8000
      targetPort: 80
      nodePort: 32121
  type: NodePort
  
  
vi index.html

kubectl create configmap htmldefault --from-file=index.html

kubectl get cm

kubectl create configmap html --from-file=index.html

kubectl create configmap js --from-file=scorekeeper.js

kubectl create configmap css --from-file=style.css


apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
        volumeMounts:                                              ## This approach not working
        - mountPath: /usr/share/nginx/html
          name: config1
		- mountPath: /usr/share/nginx/html
		  name: config2
		- mountPath: /usr/share/nginx/html
		  name: config3
      volumes:
      - name: config1
        configMap:
          name: html
	  - name: config2
  	    configMap:
		  name: js
	  - name: config3
	    configMap:
		  name: css
		  
====	===================================================================================	  
		  
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /usr/share/nginx/html/index.html
          subPath: index.html
          name: config1
        - mountPath: /usr/share/nginx/html/scorekeeper.js
          name: config2
          subPath: scorekeeper.js
        - mountPath: /usr/share/nginx/html/style.css
          subPath: style.css
          name: config3
      volumes:
      - name: config1
        configMap:
          name: html
      - name: config2
        configMap:
          name: js
      - name: config3
        configMap:
          name: css


  
  
	  
	  
	  

	  
	  
	  